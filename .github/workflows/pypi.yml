name: Build Python Wheels

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-and-publish:
    name: Build and Publish ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: linux-x86_64
            os: ubuntu-latest
            arch: x86_64
            python-arch: x64
            cibw-build: cp311-manylinux_x86_64
          - name: macos-arm64
            os: macos-latest
            arch: arm64
            python-arch: arm64
            cibw-build: cp311-macosx_arm64
          # - name: linux-aarch64
          #   os: ubuntu-latest
          #   arch: aarch64
          #   python-arch: arm64
          #   cibw-build: cp311-manylinux_aarch64
          # - os: macos-latest
          #   arch: x86_64
          #   python-arch: x64
          # - os: ubuntu-latest
          #   arch: arm64
          #   python-arch: arm64
          # - os: macos-latest
          #   arch: x86_64
          #   python-arch: x64
          #   - os: windows-latest
          #     arch: x86_64  # Only x86_64 is supported for Windows

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
          architecture: ${{ matrix.python-arch }}

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin>=0.13 cibuildwheel

      - name: Check Maturin Version
        run: maturin --version

      - name: Prepare Dependencies for dockerized build
        if: runner.os == 'Linux'
        run: |
          cp -r env_common infraweave_py/env_common
          cp -r defs infraweave_py/defs
          cp -r utils infraweave_py/utils
          cp -r env_aws infraweave_py/env_aws
          cp -r env_azure infraweave_py/env_azure

      - name: Adjust Cargo.toml paths for dockerized build
        if: runner.os == 'Linux'
        working-directory: infraweave_py
        run: |
          sed -i 's#path = "../env_common"#path = "env_common"#' Cargo.toml
          sed -i 's#path = "../defs"#path = "defs"#' Cargo.toml
          sed -i 's#path = "../utils"#path = "utils"#' Cargo.toml

      - name: Build Wheels
        working-directory: infraweave_py
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.cibw-build }}
          CIBW_ENVIRONMENT: |
            PATH=$HOME/.cargo/bin:$PATH
            RUSTFLAGS=""
          CIBW_BEFORE_BUILD_LINUX: |
            yum install -y perl-core
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source $HOME/.cargo/env
          CIBW_BEFORE_BUILD_MACOS: |
            brew install openssl
        run: |
          cibuildwheel --output-dir dist

      - name: Upload Wheels
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-wheels
          path: infraweave_py/dist/*.whl

  pypi-publish:
    name: Publish Wheels to PyPI
    runs-on: ubuntu-latest
    needs: build-and-publish
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Collect Wheels
        run: |
          mkdir -p dist_collected
          find dist/ -name '*.whl' -exec cp {} dist_collected/ \;

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist_collected/
