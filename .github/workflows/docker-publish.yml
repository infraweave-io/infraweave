name: Build runner

on:
  workflow_dispatch:
    inputs:
      run-main:
        description: 'Trigger manually'
        default: 'true'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-amd64:
    name: Build and Push AMD64 Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push AMD64 Image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64 -f terraform_runner/Dockerfile .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64

  build-arm64:
    name: Build and Push ARM64 Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable QEMU (if building ARM64 on x86)
        uses: docker/setup-qemu-action@v2

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push ARM64 Image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64 -f terraform_runner/Dockerfile .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64

  create-manifest:
    name: Create Multi-Architecture Manifest
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and Push Multi-Arch Manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64
          docker manifest annotate ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64 --arch amd64
          docker manifest annotate ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64 --arch arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
