name: Build and Push Multi-Arch Image (Template)

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      image_name:
        required: true
        type: string
      folder:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      tag_prefix:
        required: false
        type: string
        default: ""
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      QUAY_USERNAME:
        required: true
      QUAY_PASSWORD:
        required: true
      AWS_ACCOUNT_ID:
        required: true

env:
  GHCR_REGISTRY: ghcr.io
  DOCKER_REGISTRY: docker.io
  QUAY_REGISTRY: quay.io
  PUBLIC_ECR_REGISTRY: public.ecr.aws
  GHCR_REPO: ${{ github.repository }}
  DOCKER_REPO: infraweave
  QUAY_REPO: infraweave
  ECR_REPO: infraweave
  AWS_ROLE_NAME: ECRPublicPushAccessFromInfraweaveGithub

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      id-token: write    # For OIDC
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log into GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.QUAY_REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Configure AWS credentials for ECR Public using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_NAME }}
          aws-region: us-east-1

      - name: Log into Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.PUBLIC_ECR_REGISTRY }}

      - name: Build AMD64 Image
        run: |
          docker build --build-arg ARCH=amd64 --build-arg VERSION=${{ inputs.version }} -t ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 -f ${{ inputs.folder }}/${{ inputs.dockerfile }} .
          docker push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64

          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64

          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64
          docker push ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64

          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64
          docker push ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64

  build-arm64:
    runs-on: ubuntu-24.04-arm
    permissions:
      id-token: write    # For OIDC
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log into GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.QUAY_REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Configure AWS credentials for ECR Public using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_NAME }}
          aws-region: us-east-1

      - name: Log into Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.PUBLIC_ECR_REGISTRY }}

      - name: Build ARM64 Image
        run: |
          docker buildx build --build-arg ARCH=arm64 --build-arg VERSION=${{ inputs.version }} --load --platform linux/arm64 -t ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64 -f ${{ inputs.folder }}/${{ inputs.dockerfile }} .
          docker push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64

          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64 ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64

          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64 ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker push ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64

          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64 ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker push ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    permissions:
      id-token: write    # For OIDC
      packages: write
      contents: read
    steps:
      - name: Log into GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.QUAY_REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Configure AWS credentials for ECR Public using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_NAME }}
          aws-region: us-east-1

      - name: Log into Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.PUBLIC_ECR_REGISTRY }}

      - name: Create and Push Manifests
        run: |
          # Versioned
          docker manifest create ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }} \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker manifest push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}

          docker manifest create ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }} \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker manifest push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}

          docker manifest create ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }} \
            ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 \
            ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker manifest push ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}

          docker manifest create ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }} \
            ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 \
            ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker manifest push ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}

          # Latest
          docker manifest create ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}latest \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker manifest push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}latest

          docker manifest create ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}latest \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker manifest push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}latest

          docker manifest create ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}latest \
            ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 \
            ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker manifest push ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}latest

          docker manifest create ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}latest \
            ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-amd64 \
            ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}${{ inputs.version }}-arm64
          docker manifest push ${{ env.PUBLIC_ECR_REGISTRY }}/${{ env.ECR_REPO }}/${{ inputs.image_name }}:${{ inputs.tag_prefix }}latest
