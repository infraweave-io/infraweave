name: Build Kubernetes Operator Docker Image

on:
  workflow_dispatch:
    inputs:
      run-main:
        description: 'Trigger manually'
        default: 'true'

env:
  GHCR_REGISTRY: ghcr.io
  DOCKER_REGISTRY: docker.io
  QUAY_REGISTRY: quay.io
  IMAGE_NAME: operator
  GHCR_REPO: ${{ github.repository }}
  DOCKER_REPO: infraweave
  QUAY_REPO: infraweave

jobs:
  build-amd64:
    name: Build and Push AMD64 Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.QUAY_REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and Push AMD64 Image to GHCR
        run: |
          docker build -t ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:amd64 -f operator/Dockerfile .
          docker push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:amd64

      - name: Build and Push AMD64 Image to Docker Hub
        run: |
          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:amd64 ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:amd64
          docker push ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:amd64

      - name: Build and Push AMD64 Image to Quay.io
        run: |
          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:amd64 ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:amd64
          docker push ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:amd64

  build-arm64:
    name: Build and Push ARM64 Image
    runs-on: ARM64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable QEMU (if building ARM64 on x86)
        uses: docker/setup-qemu-action@v2

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.QUAY_REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and Push ARM64 Image to GHCR
        run: |
          docker buildx build --load --platform linux/arm64 -t ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:arm64 -f operator/Dockerfile .
          docker push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:arm64

      - name: Build and Push ARM64 Image to Docker Hub
        run: |
          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:arm64 ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:arm64
          docker push ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:arm64

      - name: Build and Push ARM64 Image to Quay.io
        run: |
          docker tag ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:arm64 ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:arm64
          docker push ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:arm64
  
  create-manifest:
    name: Create Multi-Architecture Manifest
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.QUAY_REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
  
      - name: Create and Push Multi-Arch Manifest to GHCR
        run: |
          docker manifest create ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:amd64 \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:arm64
          docker manifest annotate ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:amd64 --arch amd64
          docker manifest annotate ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:arm64 --arch arm64
          docker manifest push ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}/${{ env.IMAGE_NAME }}:latest

      - name: Create and Push Multi-Arch Manifest to Docker Hub
        run: |
          docker manifest create ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:amd64 \
            ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:arm64
          docker manifest annotate ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:amd64 --arch amd64
          docker manifest annotate ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:arm64 --arch arm64
          docker manifest push ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:latest

      - name: Create and Push Multi-Arch Manifest to Quay.io
        run: |
          docker manifest create ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:amd64 \
            ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:arm64
          docker manifest annotate ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:amd64 --arch amd64
          docker manifest annotate ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:arm64 --arch arm64
          docker manifest push ${{ env.QUAY_REGISTRY }}/${{ env.QUAY_REPO }}/${{ env.IMAGE_NAME }}:latest
  