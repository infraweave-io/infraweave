# Default values for infraweave-helm.

# Cluster configuration
cluster:
  # Unique cluster ID for this Kubernetes cluster
  clusterId: "production-cluster"

# Operator configuration
operator:
  enabled: true
  replicaCount: 1
  mode: "operator"  # Must be "operator"
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Admission Controller (webhook) configuration
admissionController:
  enabled: true
  replicaCount: 3  # Multiple replicas for HA
  mode: "webhook"  # Must be "webhook"
  port: 8443
  serviceName: "infraweave-admission-controller"  # Used for certificate generation
  
  service:
    type: ClusterIP
    port: 443
    targetPort: 8443
  
  # TLS certificate for admission controller (required by Kubernetes)
  tls:
    # If true, provide your own certificates via existing secret
    # If false, certificates will be auto-generated via a Kubernetes Job
    useExistingSecret: false
    # Name of the secret with tls.crt and tls.key
    secretName: "infraweave-admission-controller-certs"
    # Only used if useExistingSecret is true
    caCert: ""
    cert: ""
    key: ""
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 64Mi

aws:
  accessKeyId: ""
  secretAccessKey: ""
  sessionToken: ""
  region: ""

image:
  repository: infraweave-operator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
